name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      continue-on-error: true
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node JS Version 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install NodeJS dependencies
        run: npm install
      - name: Execute Code Coverage
        run: npm run coverage
      - name: Upload Code Coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
    docker:
      name: Docker Container
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Image Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Docker Image Testing
        run: |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

          export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo "IP Address: $IP"

          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live

      - name: Docker Image Push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
    dev-deploy:
      runs-on: ubuntu-latest
      needs: [docker]
      env: development
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Kubectl
        uses: azure/setup-kubectl
        with:
          version: 'v1.26.0'
      - name: Kubectl set-context@v4
        uses: azure/k8s-set-context
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Verify
        run: kubectl version --short -o yaml

      